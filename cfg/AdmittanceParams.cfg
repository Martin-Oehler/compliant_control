#! /usr/bin/env python
#*********************************************************************
# Copyright (c) 2014, David Conner, TORC Robotics
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Team ViGIR or TORC Robotics nor the names of
#       its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#*********************************************************************/
# Author: Martin Oehler
# Desc: Allows admittance control parameters to be tuned in real-time
PACKAGE='compliant_ros_controller'
def generate(gen):
    #           Name            Type    Level Description         Default  Min   Max
    gen.add( "active"       , bool_t  , 1,"Check this to activate admittance control" , False)
    gen.add( "inertia"      , double_t, 1,"end-effector inertia"  , 1.0 , 0  , 1000.0)
    gen.add( "damping"      , double_t, 1,"end-effector damping"  , 10.0 ,  0  , 1000.0)
    gen.add( "stiffness"    , double_t, 1,"end-effector stiffness", 5.0 ,  0  , 1000.0)
    gen.add( "dead_zone_trans"    , double_t, 1,"dead zone for f/t values", 0.1 ,  0  , 10)
    gen.add( "dead_zone_rot"    , double_t, 1,"dead zone for f/t values", 0.1 ,  0  , 10)
    gen.add( "speed_limit_trans"  , double_t, 1,"speed limit for end-effector movement", 0.1 ,  0  , 10)
    gen.add( "speed_limit_rot"  , double_t, 1,"speed limit for end-effector movement", 0.1 ,  0  , 10)
    gen.add( "mode"         , int_t   , 1,"Sets the admittance mode", 0   ,  0  , 1)


    # PkgName #NodeName #Prefix for generated .h include file, e.g. ParametersConfig.py
    exit(gen.generate(PACKAGE, "compliant_controller", "AdmittanceParams"))
# try catkin generator first
try:
    from dynamic_reconfigure.parameter_generator_catkin import *
    gen = ParameterGenerator()
    generate(gen)
# reason for catching IndexError
# parameter_generator_catkin expects 4 arguments while rosbuild only passes in 2
# not thrilled with this solution
except IndexError:
    print 'ERROR', PACKAGE, 'AdmittanceParams.cfg failed using parameter_generator_catkin, using rosbuild instead'
    from dynamic_reconfigure.parameter_generator import *
    gen = ParameterGenerator()
    generate(gen)
